
public class MobileNumberValidation1  
{  
  
public static void main(String args[])   
{  
//calling method and validate different formats   
System.out.println("2124567890 : " + validateNumber("2124567890"));
System.out.println("212-456-7890 : " + validateNumber("212-456-7890"));   
System.out.println("(212)456-7890 : " + validateNumber("(212)456-7890"));  
System.out.println("(212)-456-7890 : " + validateNumber("(212)-456-7890"));  
System.out.println("212.456.7890 : " + validateNumber("212.456.7890"));  
System.out.println("212 456 7890: " + validateNumber("212 456 7890"));  
System.out.println("+12124567890 : " + validateNumber("+12124567890"));  
System.out.println("+12124567890 : " + validateNumber("+12124567890"));  
System.out.println("+1 212.456.7890 : " + validateNumber("+1 212.456.7890"));  
System.out.println("+212-456-7890 " + validateNumber("+212-456-7890"));  
System.out.println("+1-212-456-7890 " + validateNumber("+1-212-456-7890"));  
}

//function validates mobile numbers   
private static boolean validateNumber(String mobNumber)   
{  
//validates phone numbers having 10 digits (9998887776)  
if (mobNumber.matches("\\d{10}"))  
return true;  
//validates phone numbers having digits, -, . or spaces  
else if (mobNumber.matches("\\d{3}[-\\.\\s]\\d{3}[-\\.\\s]\\d{4}"))  
return true;  
else if (mobNumber.matches("\\d{4}[-\\.\\s]\\d{3}[-\\.\\s]\\d{3}"))  
return true;  
//validates phone numbers having digits and extension (length 3 to 5)  
else if (mobNumber.matches("\\d{3}-\\d{3}-\\d{4}\\s(x|(ext))\\d{3,5}"))  
return true;  
//validates phone numbers having digits and area code in braces  
else if (mobNumber.matches("\\(\\d{3}\\)-\\d{3}-\\d{4}"))  
return true;  
else if (mobNumber.matches("\\(\\d{5}\\)-\\d{3}-\\d{3}"))  
return true;  
else if (mobNumber.matches("\\(\\d{4}\\)-\\d{3}-\\d{3}"))  
return true;  
//return false if any of the input matches is not found  
else  
return false;  
}  
}  